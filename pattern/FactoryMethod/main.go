package main

import (
	"example.com/m/v2/L2_WB/pattern/FactoryMethod/pkg"
	"fmt"
)

func PrintDetails(g pkg.IGun){
	fmt.Printf("Gun: %s\n", g.GetName())
	fmt.Printf("Power: %d\n", g.GetPower())
}



func main() {
	ak47,_ := pkg.GetGun("ak47")
	musket,_ := pkg.GetGun("musket")

	PrintDetails(ak47)
	PrintDetails(musket)
}
//Применимость:
//Когда вы хотите экономить системные ресурсы,
//повторно используя уже созданные объекты, вместо порождения новых.

//Достоинства:
// Избавляет класс от привязки к конкретным классам продуктов.
// Выделяет код производства продуктов в одно место, упрощая поддержку кода.
// Упрощает добавление новых продуктов в программу.
// Реализует принцип открытости/закрытости.

//Недостатки:
// Может привести к созданию больших параллельных иерархий классов,
//так как для каждого класса продукта надо создать свой подкласс создателя.